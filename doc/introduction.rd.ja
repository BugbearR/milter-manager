# -*- rd -*-

= はじめに --- milter-managerの概要

milter-managerを導入することによって得られる以下のメリットの
理由を説明します。

  * milterの登録方法がMTAに依存しなくなる
  * 迷惑メール対策を効果的に実行するようにmilterを柔軟に組み
    合わせることができる
  * 他のmilterの設定を検出し、動的にmilter-managerの設定を追
    従させることができる

milterに関する知識がない読者でも読み進められるようにmilterの
説明からはじめます。

== milter

milterとは((*m*))ail f((*ilter*))の略で、Sendmailが開発したメー
ルフィルタプラグインの仕組みです。milterを使うことにより、
Sendmail本体を変更せずに、迷惑メールフィルタやウィルスチェッ
クなどの機能をSendmailに組み込むことができます。また、一度に
複数の機能を組み込むことができるため、機能を組み合わせること
で、より効果的なメールフィルタ機能を実現できます。

Sendmailとmilterの関係を図示して整理する前に、用語の整理をし
ます。

「milter」という単語は、「メールフィルタプラグインの仕組み」
という意味以外にも、「メールフィルタプラグイン」という意味で
も使われます。ここでは、混乱を避けるために以下のように使い分
けます。

  * milter: メールフィルタプラグイン
  * milterシステム: メールフィルタプラグインの仕組み

milterはSendmailとは別プロセスで動作し、milterとSendmailは
独自のプロトコルで通信を行います。このプロトコルのことを
「milterプロトコル」と呼ぶこととします。また、Sendmailが
milterに接続し、milterプロトコルで通信を行い、milterとの接続
を切断するまでを「milterセッション」と呼ぶこととします。

これらの用語を用いたSendmailとmilterの関係は以下の通りです。

図: Sendmailとmilterの関係

Sendmailがmilterシステムを提供してから、多くのmilterが開発さ
れています。((<URL:https://www.milter.org/>))というサイトでは
登録されているmilterを探すことができます。2008年12月時点では
62個のmilterが登録されています。milter.orgに登録されていない
milterも多くあり、実際には100以上のmilterが開発されていると
思われます。例えば、以下のようなmilterです。

: clamav-milter
   ウィルス対策用のフリーソフトウェアである
   ((<ClamAV|URL:http://www.clamav.net/>))を利用するための
   milter（ClamAVに同梱）

: ((<amavisd-milter|URL:http://amavisd-milter.sourceforge.net/>))
   総合的なメールの内容検証を行うフリーソフトウェアである
   ((<amavisd-new|URL:http://www.ijs.si/software/amavisd/>))を
   利用するためのmilter

: ((<spamass-milter|URL:http://savannah.nongnu.org/projects/spamass-milt/>))
   迷惑メールチェックを行うフリーソフトウェアである
   ((<SpamAssassin|URL:http://spamassassin.apache.org/>))を
   利用するためのmilter

また、新しい迷惑メール対策をmilterとして実装する場合も多く、
これからもmilterは増えていくと思われます。

=== Postfixのmilterシステム対応

もともと、milterシステムはSendmail専用の仕組みでしたが、
Postfixもバージョン2.3からmilterシステムのサポートを始めまし
た。これにより、SendmailでもPostfixでも利用可能なメールフィル
タを作成することができるようになり、milterの再利用性が向上し
ました。

図: SendmailとPostfixとmilterの関係

SendmailとPostfixのようにmilterをサポートしているMTAであれば、
MTAによらずmilterを利用できますが、milterを登録する方法や
milterの設定方法はMTA毎に異なります。せっかくSendmailと
Postfix間で同じmilterを利用できるようになったのですが、効率
的・効果的にmilerを組み合わせるノウハウは共有できません。

=== より効率的・効果的なmilterの利用

迷惑メール対策手法は数多く考案されています。しかし、ある手法
1つですべての迷惑メールに対応できるわけではないため、複数の手
法を組み合わせて対応する必要があります。そして、多くの手法は
なんらかの欠点を抱えています。例えば、誤検出はないが検出率が
低い、検出率は高いが処理時間が長い、検出率は高いが負荷が大き
いなどです。

現在のように様々な種類の迷惑メールが大量に送信されているイン
ターネット上では、手法の長所を活かしつつ、欠点を補うように利
用する必要があります。

手法は大きく接続ベース手法と内容ベース手法に分けられます。接
続ベース手法は、メールの内容は使わず、接続元ホストや差出人、
宛先などの情報で迷惑メールかどうかを判断する手法です。内容ベー
ス手法はメールの内容を解析して迷惑メールかどうかを判断する手
法です。

接続ベース手法は検出率もよく、内容ベース手法よりも負荷が軽い
ことが多いです。しかし、Gmailなどのような普通のメールサーバか
ら送信されている迷惑メールの多くは検出することができません。
しかし、内容ベース手法を用いることにより、接続ベース手法を回
避した迷惑メールを検出することが可能です。

このような手法の特徴を反映して、2008年12月時点では以下のよう
な迷惑メール対策が主流になっています。

  (1) できるだけ接続ベース手法で迷惑メールかどうかを検出
  (2) 接続ベース手法では検出できなかった迷惑メールを内容ベー
      ス手法で検出

接続ベース手法は、メールを再送させることにより迷惑メール送信
者からきたメールかどうかを判断するGreylistingや、迷惑メール送
信者データベースに載っているかどうかで判断するブラックリスト
方式などがあります。商用製品のブラックリスト方式では独自のデー
タベースを利用することが多くあります。フリーソフトウェアでの
実装ではDNSBLと呼ばれるDNSのインターフェイスを利用したデータ
ベースを利用することが多いです。また、データベースを使用せず
数種類の正規表現で迷惑メール送信者を検出するS25R（Selective
SMTP Rejection）という手法もあります。

GreylistingやDNSBLを用いる場合は、メールの再送やネットワーク
通信が行われるため、負荷は高くないもののメールの遅延や処理時
間の増加が起こりえます。そのため、明らかに怪しくない送信者や
ほとんど怪しくない送信者の場合はGreylistingやDNSBLを省略する
ことにより、メールの遅延や処理時間の増加を抑えることができま
す。

S25Rは、負荷も軽く処理時間も短く検出率もよく優秀な方法なので
すが、誤検出を救済する手段がない、ホワイトリストをメンテナン
スする必要があるといった欠点があります。一方、Greylistingで
は一見怪しい送信者でもメールを再送してくれば、自動的に一定期
間ホワイトリストに登録するので、メンテナンスのコストはありま
せん。

これらの手法の長所を活かしつつ、欠点を補いながら利用するため
には以下のような利用方法があります。

  (1) S25Rで迷惑メール送信者か判断
      (1) 迷惑メールと判断: DNSBLで迷惑メール送信者か判断
          (1) 迷惑メールと判断: Greylistingで迷惑メール送信者か判断
              (1) メールが再送された: 迷惑メール送信者ではないと判断
              (2) メールが再送されない: 迷惑メール送信者と判断
      (2) 迷惑メールではない: DNSBL/Greylistingとも省略

この方法では、S25RとDNSBLで怪しいと判断された接続に対しての
みGreylistingを適用します。そのため、迷惑メール送信者以外か
らのメールに対して再送要求をして配送遅延するという欠点が起き
る確率を減らしています。また、S25Rで必要とされるホワイトリス
ト管理などのメンテナンスはGreylistingで自動的に行われるため、
S25Rの欠点といえるメンテナンスコストを解消することもできます。

このように、それぞれの手法は組み合わせ方を工夫すれば、より効
率的に利用することができます。

=== MTAの設定の問題点

迷惑メール対策の手法はmilterとして実装されています。それでは、
milterを効率的に組み合わせるためにはSendmail, Postfixにどのよ
うな設定を行えばよいでしょうか。

Sendmail、Postfixともに、milterを適用する設定を行うと、すべて
のメールに対してmilterが適用されます。そのため、特定の条件の
ときのみmilterを適用するということはできません。（Postfixで
は、milterではなく、((<アクセスポリシー委譲
|URL:http://www.postfix.org/SMTPD_POLICY_README.html>))の仕組
みを使うことによりS25Rで怪しいと判断した場合のみGreylistingを
適用するということができます。）

また、Sendmailではmilter毎に接続に失敗した時のアクションやタ
イムアウト時間の設定ができるのに対して、Postfixではmilter全体
の設定となります。

milterはすでに多くの実装が開発されているという点、複数のMTA
で迷惑メール対策手法の実装が共有できるという点で有用です。し
かし、MTAでmilterの適用を柔軟に設定できないことやMTA間での設
定方法の違いから、そのような利点を活かしきれていません。

そのようなmilterの利点を活かすためのフリーソフトウェアが
milter-managerです。

=== milter-manager

milter-managerは複数のmilterを管理するmilterです。
milter-managerには複数のmilterを登録することができ、
milter-managerに対するmilterセッションは登録された複数の
milterに転送されます。milter-managerに登録されたmilterのこと
を「子milter」と呼ぶこととします。

つまり、milter-managerは1種のプロキシとして動作します。MTAか
ら見ると、milter-managerは1つのmilterです。一方、子milterか
ら見ると、milter-managerからはMTAのように見えます。

図: MTAとmilter-managerと子milter

このような構成にすることで、各MTA毎に異なっていた部分が
milter-managerの層で共通化されます。これにより、以下の2つの
利点があります。

  (1) milterを登録する方法がMTAに依存しなくなる
  (2) milterの適用方法を柔軟に変更することができる

milterの登録方法がMTAに依存しなくなるのは、milterを登録する
先がMTAではなく、milter-managerになるためです。milterの適用
方法が柔軟に変更できるようになるのは、複数のmilterを適用する
処理をMTAではなくmilter-managerの層で行うようになるためです。

milter-managerのこの2つの利点により、milterの利点を活かすこ
とができます。

一方、milter-managerを間に入れることにより、パフォーマンス面
での影響があります。ただし、milter-managerは以下の通り十分高
速に動作するため、milter-managerがシステムのボトルネックにな
ることはないでしょう。

図: ベンチマークデータ？

== MTAとmilterを連携させる設定

milterはそれぞれ別々の機能を提供しており、複数のmilterを組み
合わせることにより目的とする機能を実現します。そのため、複数
のmilterを設定する必要がでてきます。また、各milterをMTAと連携
させる設定もする必要があります。このように、milter関連の設定
が複数箇所に分散され、管理コストがあがってしまう危険性があり
ます。

milter-managerはRubyインタプリタを内蔵しています。Rubyは本物
のプログラミング言語であり、読みやすい文法と柔軟な処理能力を
提供します。

Rubyインタプリタを用いることにより、milter-managerの設定を自
分で編集せずに、システム内のmilterを検出することができます。
これにより、milterとMTAを連携させる設定を管理する必要がなく
なり、管理コストを下げることができます。

== まとめ

  * milterというMTAにメールフィルタを組み込む仕組みがある
  * milterにより迷惑メール対策手法やウィルスチェック機能を実
    現できる
  * SendmailとPostfixがmilterをサポートしている
  * 迷惑メール対策手法は一長一短あり、短所を補いながら長所を
    活かすように利用することで、より効果をあげることができる
  * milterには利点と欠点がある
    * 利点:
      * MTAが異なっても利用できる
      * すでに多くの実装がある
    * 欠点:
      * MTAごとにmilter関連の設定方法が異なる
      * MTAがmilterを効果的に組み合わせる方法を提供していな
        い
      * MTAとmilterの設定が分散しているため、連携させる設定
        が面倒である

  * milter-managerを用いることによりmilterの欠点を解消するこ
    とができる
