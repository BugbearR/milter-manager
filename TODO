* if all alive child milters don't need to receive the
  command, children do nothing and leader returns response
  immediately not returning PROGRESS. For example:
Index: milter/manager/milter-manager-children.c
===================================================================
--- milter/manager/milter-manager-children.c	(revision 2280)
+++ milter/manager/milter-manager-children.c	(working copy)
@@ -2205,15 +2205,13 @@
     if (!milter_manager_children_check_alive(children))
         return FALSE;
 
+    priv = MILTER_MANAGER_CHILDREN_GET_PRIVATE(children);
+    priv->current_state = MILTER_SERVER_CONTEXT_STATE_DATA;
+
     if (!milter_manager_children_is_demanding_command(children,
-                                                      MILTER_COMMAND_DATA)) {
-        emit_no_demand_command_error(children, MILTER_COMMAND_DATA);
+                                                      MILTER_COMMAND_DATA))
         return FALSE;
-    }
 
-    priv = MILTER_MANAGER_CHILDREN_GET_PRIVATE(children);
-
-    priv->current_state = MILTER_SERVER_CONTEXT_STATE_DATA;
     init_command_waiting_child_queue(children, MILTER_COMMAND_DATA);
 
     return send_command_to_first_waiting_child(children, MILTER_COMMAND_DATA);
Index: milter/manager/milter-manager-leader.c
===================================================================
--- milter/manager/milter-manager-leader.c	(revision 2280)
+++ milter/manager/milter-manager-leader.c	(working copy)
@@ -783,10 +783,12 @@
     if (!priv->children)
         return MILTER_STATUS_NOT_CHANGE;
 
-    if (milter_manager_children_data(priv->children))
+    if (milter_manager_children_data(priv->children)) {
         return MILTER_STATUS_PROGRESS;
-    else
-        return MILTER_STATUS_NOT_CHANGE; /* FIXME: reject or accept */
+    } else {
+        priv->state = next_state(leader, priv->state);
+        return MILTER_STATUS_NOT_CHANGE;
+    }
 }
 
 MilterStatus
* bug? milter-manager sometimes doesn't finish child milter?
* change process name of forked process launcher.
* send quit command to launcher on manager dispose.
* use chroot
* add --disable-milter-manager configure option.
* add --disable-ruby configure option.
* tool/milter-test-server:
  * support --macro=CONTEXT:NAME:VALUE
  * support extracting multiple {reverse,forward}-paths from
    envelope-from and envelope-recipient address in --mail-file.
* tool/milter-test-client:
  * support outputting reply information.
  * support customizing reply by command line option.
* add default applicable conditions:
  ideas:
    * S25R
    * DNSBL: http://spam-champuru.livedoor.com/dnsbl/
    * remote network (local network may not be a spammer)
      * getifaddrs(3) can be used to determine local network.
    * detected as spam (X-Spam-Flag:, X-Bogosity:)
    * detected as virus (X-Virus-Status:)
    * mailing list? (X-ML-Name)
* graphs:
  * child milters alive and dead.
    (This can not be drawn by rrdtool since rrdtool db does not handle variable items)
  * ...

* performance:
  * at least:
    * 50_000 mails/day (0.58 mails/sec)
      * 500 users
      * a user receives 100 mails/day
    * CPU: ???
    * Memory: ???
    * child milters:
      * milter-greylist
      * clamav-milter
      * spamass-milter
      * sid-milter
      * dkim-milter
      * dnsbl-milter

  * FYI:
    * BBSec Sentrion MP 4/8(2008/11)
      http://www.bbsec.co.jp/products/Sentrion_MP_48.html
      * 1_500_000 mails/day (17.36 mails/sec)
      * CPU: Quad Core Intel Xeon E5472,12M Cache,3.0GHz x 2 1600MHz FSB
      * Memory: 8GB

    * Sohpos Email Appliance (2008/11)
      http://sophos.com/sophos/docs/eng/factshts/sophos-email-appliances-dsus.pdf
      http://www.sophos.co.jp/sophos/docs/jpn/factshts/sophos-email-appliances-dsjp.pdf
     * ES1000:
       * 20_000 mails/hour (5.56 mails/sec)
       * CPU: Intel Celeron D 2.93GHz
       * Memory: 1GB
     * ES4000:
       * 80_000 mails/hour (22.22 mails/sec)
       * CPU: Intel Xeon 64-bit 3.2 GHz x 2
       * Memory: 2GB
    * HDE Anti-Spam for Gateway (2008/12)
      http://www.hde.co.jp/has/require/
      * 5_000 mails/hour (1.39 mails/sec)
      * CPU: Intel Pentium Xeon 2GHz
      * Memory: 2GB
* don't handle log event in Ruby/GLib.
* fix FIXME in data/applicable-conditions/remote-network.conf
  * add local network option?
* milter-manager can be ran as normal user if milter-manager process is
  invoked as root user. just only control connection handler and child
  milter process invoker can be ran as root user.
* write man for milter-manager, milter-test-client,
  milter-test-server and milter-log-tool.
* milter_manager_egg_to_xml_string(): add user name, timeouts and
  command options (<- needed?)
* milter-manager supports macros requests.
* milter-client-context should also close writer on timeout.
* support MAIL FROM/RCPT TO additional info parsing.
  (MilterClientContext::envelope-from, MilterClientContext::envelope-recipient)
  cited from SMTP (RFC 2821) 4.1.1.2 MAIL (MAIL):
       "MAIL FROM:" ("<>" / Reverse-Path)
                    [SP Mail-parameters] CRLF

  cited from SMTP (RFC 2821) 4.1.1.3 RECIPIENT (RCPT):
       "RCPT TO:" ("<Postmaster@" domain ">" / "<Postmaster>" / Forward-Path)
			[SP Rcpt-parameters] CRLF

  cited from SMTP (RFC 2821) 4.1.2 Command Argument Syntax:
       Reverse-path = Path
       Forward-path = Path
       Path = "<" [ A-d-l ":" ] Mailbox ">"
       A-d-l = At-domain *( "," A-d-l )
             ; Note that this form, the so-called "source route",
             ; MUST BE accepted, SHOULD NOT be generated, and SHOULD be
             ; ignored.
       At-domain = "@" domain
       Mail-parameters = esmtp-param *(SP esmtp-param)
       Rcpt-parameters = esmtp-param *(SP esmtp-param)
       esmtp-param     = esmtp-keyword ["=" esmtp-value]
       esmtp-keyword   = (ALPHA / DIGIT) *(ALPHA / DIGIT / "-")
       esmtp-value     = 1*(%d33-60 / %d62-127)
	     ; any CHAR excluding "=", SP, and control characters
       Keyword  = Ldh-str
       Argument = Atom
       Domain = (sub-domain 1*("." sub-domain)) / address-literal
       sub-domain = Let-dig [Ldh-str]
       address-literal = "[" IPv4-address-literal /
			     IPv6-address-literal /
			     General-address-literal "]"
	     ; See section 4.1.3
       Mailbox = Local-part "@" Domain
       Local-part = Dot-string / Quoted-string
	     ; MAY be case-sensitive
       Dot-string = Atom *("." Atom)
       Atom = 1*atext
       Quoted-string = DQUOTE *qcontent DQUOTE
       String = Atom / Quoted-string

  cited from SMTP (RFC 2821) 4.1.3 Address Literals:
       IPv4-address-literal = Snum 3("." Snum)
       IPv6-address-literal = "IPv6:" IPv6-addr
       General-address-literal = Standardized-tag ":" 1*dcontent
       Standardized-tag = Ldh-str
             ; MUST be specified in a standards-track RFC
             ; and registered with IANA
       Snum = 1*3DIGIT  ; representing a decimal integer
             ; value in the range 0 through 255
       Let-dig = ALPHA / DIGIT
       Ldh-str = *( ALPHA / DIGIT / "-" ) Let-dig
       IPv6-addr = IPv6-full / IPv6-comp / IPv6v4-full / IPv6v4-comp
       IPv6-hex  = 1*4HEXDIG
       IPv6-full = IPv6-hex 7(":" IPv6-hex)
       IPv6-comp = [IPv6-hex *5(":" IPv6-hex)] "::" [IPv6-hex *5(":"
		  IPv6-hex)]
	     ; The "::" represents at least 2 16-bit groups of zeros
	     ; No more than 6 groups in addition to the "::" may be
	     ; present
       IPv6v4-full = IPv6-hex 5(":" IPv6-hex) ":" IPv4-address-literal
       IPv6v4-comp = [IPv6-hex *3(":" IPv6-hex)] "::"
		    [IPv6-hex *3(":" IPv6-hex) ":"] IPv4-address-literal
	     ; The "::" represents at least 2 16-bit groups of zeros
	     ; No more than 4 groups in addition to the "::" and
	     ; IPv4-address-literal may be present

   cited from Internet Message Format (RFC 2822) 3.2.3. Folding white space and comments:
	FWS             =       ([*WSP CRLF] 1*WSP) /   ; Folding white space
				obs-FWS
	ctext           =       NO-WS-CTL /     ; Non white space controls
				%d33-39 /       ; The rest of the US-ASCII
				%d42-91 /       ;  characters not including "(",
				%d93-126        ;  ")", or "\"
	ccontent        =       ctext / quoted-pair / comment
	comment         =       "(" *([FWS] ccontent) [FWS] ")"
	CFWS            =       *([FWS] comment) (([FWS] comment) / FWS)

   cited from Internet Message Format (RFC 2822) 3.2.4. Atom:
	atext           =       ALPHA / DIGIT / ; Any character except controls,
				"!" / "#" /     ;  SP, and specials.
				"$" / "%" /     ;  Used for atoms
				"&" / "'" /
				"*" / "+" /
				"-" / "/" /
				"=" / "?" /
				"^" / "_" /
				"`" / "{" /
				"|" / "}" /
				"~"
	atom            =       [CFWS] 1*atext [CFWS]
	dot-atom        =       [CFWS] dot-atom-text [CFWS]
	dot-atom-text   =       1*atext *("." 1*atext)

   cited from Internet Message Format (RFC 2822) 3.2.1. Primitive Tokens:
        text            =       %d1-9 /         ; Characters excluding CR and LF
                                %d11 /
                                %d12 /
                                %d14-127 /
                                obs-text

   cited from Internet Message Format (RFC 2822) 3.2.2. Quoted characters:
        quoted-pair     =       ("\" text) / obs-qp

   cited from Internet Message Format (RFC 2822) 3.2.5. Quoted strings:
	qtext           =       NO-WS-CTL /     ; Non white space controls
				%d33 /          ; The rest of the US-ASCII
				%d35-91 /       ;  characters not including "\"
				%d93-126        ;  or the quote character
	qcontent        =       qtext / quoted-pair
	quoted-string   =       [CFWS]
				DQUOTE *([FWS] qcontent) [FWS] DQUOTE
				[CFWS]

   cited from Internet Message Format (RFC 2822) 4.1. Miscellaneous obsolete tokens:
	obs-qp          =       "\" (%d0-127)
	obs-text        =       *LF *CR *(obs-char *LF *CR)

	obs-char        =       %d0-9 / %d11 /          ; %d0-127 except CR and
				%d12 / %d14-127         ;  LF


* milter-client-context supports MilterStepFlags.
* check client context's modify operations (e.g. milter_client_add_header())
  are called on end-of-message state.
