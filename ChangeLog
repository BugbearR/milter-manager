2008-10-29  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager-egg.[ch], test/manager/test-egg.c:
	add hatched signal.

	* milter/manager/milter-manager-child.h: MANAGER_TYPE -> TYPE_MANAGER.

2008-10-29  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c: Initialize quitted_milters
	with NULL and the first element should be itself not priv->milters.
	* data/milter-manager.conf, test/manager/test-controller.c: A new baby
	was born.
	* test/manager/test-egg.c: Unset MILTER_LOG_LEVEL.
	* milter/manager/milter-manager-children.c: Remove from reply queue if
	timeout is occured.
	* milter/manager/milter-manager-children.c (cb_skip, cb_quarantine):
	Remove reply queue if state check fails. 
	* test/manager/test-controller.c (test_quit, test_abort,
	test_unknown): Invoke g_main_context_iteration until all pending
	events were processed.

2008-10-28  Kouhei Sutou  <kou@cozmixng.org>

	* binding/ruby/, data/milter-manager.conf: use egg.

	* milter/manager/milter-manager-configuration.[ch]: use egg not child.

	* milter/manager/milter-egg.[ch], test/manager/test-egg.c: support
	connection spec and hatch.

	* milter/manager/milter-manager-children.[ch]:
	- add milter_manager_children_length().
	- don't unref child while signal callback. decoder owned by
	the unrefed child may be processing.

	* milter/manager/milter-manager-child.[ch]: add child's name accessors.

	* test/manager/test-controller.c: spawn -> egg.

	* ./: spawn -> egg.

	* binding/ruby/test/test_spawn.rb: add tests for accessors.

2008-10-28  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-configuration.[ch]: Remove timeout
	values since these values depend on filter.
	* milter/manager/milter-manager-children.c: Emit compiled reply signal
	when all filters have returned response.
	* milter/manager/milter-manager-children.c: Also added child to queue in
	body command.
	* milter/manager/milter-manager-children.c: If the status from a
	filter is "ACCEPT" or "REJECT" or "DISCARD", send "QUIT" command and
	remove the filter from children list.
	* milter/manager/milter-manager-children.c (cb_temporary_failure):
	expire the filter if the state is a connection-oriented routine (i.e.
	NEGOTIATE or CONNECT or HELO).
	* milter/manager/milter-manager-children.c (cb_reject): expire the
	filter except ENVELOPE_RECEIPT routine. In the case of
	ENVELOPE_RECEIPT, reject the receipt and continue the session.
	* milter/manager/milter-manager-children.c: milter_error if SKIP reply
	is received not in BODY. send BODY command if skip reply has not been
	received yet.
	* milter/manager/milter-manager-children.c: NEGOTIATE is not a
	connection-oriented routine, QUIT is the one of it.
	* milter/manager/milter-manager-children.c: Emit "skip" signal if all
	children are received "SKIP" reply.
	* milter/manager/milter-manager-children.c (compile_reply_status):
	MILTER_STATUS_CONTINUE < MILTER_STATUS_ACCEPT <
	MILTER_STATUS_TEMPORARY_FAILURE < MILTER_STATUS_DISCARD <
	MILTER_STATUS_REJECT.
	* milter/manager/milter-manager-children.c: "progress" and
	"quarantine" reply are only allowed in end of message session.
	* milter/manager/milter-manager-children.c: Unref MilterChild in
	teardown_server_context_signals.
	* milter/manager/milter-manager-children.c: Close connection to a
	filter if timeout is happend.
	* milter/manager/milter-manager-controller.c: Cleanup unused timeout
	codes.
	* test/manager/test-child.c: Set MILTER_LOG_LEVEL environment value to
	suppress milter's log output.

2008-10-27  Kouhei Sutou  <kou@cozmixng.org>

	* binding/ruby/test/: add.

	* binding/ruby/src/rb-milter-manager.c,
	binding/ruby/src/rb-milter-manager-spawn.c,
	binding/ruby/src/rb-milter-manager-private.h,
	binding/ruby/src/Makefile.am: add spawn.

	* milter/manager.h: add spawn.

	* milter/manager/milter-manager-spawn.[ch],
	test/manager/test-spawn.c: add command.

	* milter/manager/milter-manager-spawn.[ch],
	test/manager/test-spawn.c: add user name.

	* milter/manager/milter-manager-child.c (child_watch_func): cleanup.

	* test/manager/test-controller.c: remove debug code.

	* test/manager/test-spawn.c: add tests for timeout.

	* milter/manager/milter-manager-spawn.[ch],
	test/manager/test-spawn.c: add.

	* milter/manager/milter-manager-controller.c,
	test/lib/milter-test-client.rb,
	test/manager/test-controller.c: support unknown command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support abort command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support quit command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support end-of-message command.

	* milter/manager/milter-manager-children.c: end-of-message isn't
	affected by MILTER_STEP_NO_BODY.

	* test/lib/milter-test-client.rb: end-of-message signal may
	receive chunk.

	* test/manager/test-controller.c: handle all step.

	* test/lib/milter-test-server.rb
	(MilterTestServer#sender_address): return Milter::SocketAddress
	not packed string.

	* milter/manager/milter-manager-children.c
	(milter_manager_children_end_of_message): shorten.

2008-10-27  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c: Merge each MilterOption
	from filter.
	* milter/manager/milter-manager-children.c: MilterManagerConfigration
	property.
	* milter/manager/milter-manager-controller.c: Remove
	MilterMacrosRequests from private values.
	* milter/manager/milter-manager-children.c: Emit "error" signal.
	* milter/manager/milter-manager-children.c: Emit "error" if the daemon
	of child filter could not be started.
	* milter/manager/milter-manager-children.c: Check each command is
	needed for a child filter before invoking the command.
	* milter/manager/milter-manager-children.c: Emit "negotiate-reply"
	signal when all children filters returns "negotiate-reply".
	* milter/manager/milter-manager-controller.c: Connect to "error" signal
	of MilterManagerChildren.
	* milter/manager/milter-manager-childrenc.c: Emit "negotiate-reply"
	with its own (i.e. merged or combined )MilterOption and
	MilterMacrosRequests. And milter_manager_children_negotiate() returns
	FALSE if a filter fails on negotiation.
	* milter/manager.h: Include milter-manager-children.h.
	* milter/manager/milter-manager-objects.h: Added.
	* milter/manager/milter-manager-configuration.h: Move typedef of
	MilterManagerConfiguration into milter-manager-objects.h.
	* milter/manager/milter-manager-children.[ch]:
	milter_manager_children_new() now needs a MilterManagerConfiguration
	object.
	* milter/manager/milter-manager-controller.c: Include
	milter-manager-children.h.
	* test/manager/test-controller.c: Support for prural children.
	* milter/manager/milter-manager-configuration.[ch]: sending timeout ->
	writing timeout.
	* milter/manager/milter-manager-child.[ch]: Added
	milter_manager_child_new_with_timeout().
	* milter/manager/milter-manager-children.c,
	milter/manager/milter-manager-controller.c: sending timeout -> writing
	timeout.
	* test/manager/test-controller.c: Set client_ready and client_reaped
	TRUE in the head of run_spawn().
	* milter/manager/milter-manager-children.c: Emit each reply signals
	till after all child's signals are received.
	* milter/manager/milter-manager-childre.c:  Emit "error" signal with
	correct object.

2008-10-24  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support body command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support end-of-header command.

	* ./: support coverage.

	* milter/manager/milter-manager-controller.c,
	test/lib/milter-test-client.rb, test/manager/test-controller.c:
	support header command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support data command.

	* milter/manager/Makefile.am: add missing milter-manager-controller.h.

	* milter/manager/milter-manager-controller.c: child -> children.

	* milter/, bindings/src/, module/configuration/ruby/:
	MILTER_MANAGER_TYPE_XXX -> MILTER_TYPE_MANAGER_XXX.

	* binding/ruby/lib/milter/manager.rb,
	binding/ruby/src/rb-milter-manager-configuration.c,
	binding/ruby/src/rb-milter-manager-child.c,
	binding/ruby/src/rb-milter-manager-private.h,
	binding/ruby/src/rb-milter-manager.c: child milter -> child.

	* TODO: add: MilterManagerMother

2008-10-24  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.c: Use g_spawn_close_pid.
	* test/manager/test-child-milter.c: Exit error test.
	* milter/manager/milter-manager-controller.c: negotiate_reply signal
	has a MilterMacrosRequests.
	* milter/manager/milter-manager-controller.c: Merge
	MilterMacrosRequest in negotiate-reply signal.
	* milter/manager/milter-manager-controller.c: NULL check barrier for
	MilterMacrosRequests.
	* milter/manager/*: MilterManagerChildMilter -> MilterManagerChild.
	* milter/manager/milter-manager-children.[ch]: Added.
	* milter/manager/milter-manager-children.c: MilterManagerChildren now
	uses MilterReplySignals.
	* milter/manager/milter-manager-children.[ch]: Added server_context
	methods.
	* milter/manager/milter-manager-children.c: Emit each reply signals
	depends on conditions. TODO: bunch each child signals.
	* milter/manager/milter-manager-configuration.[ch],
	milter/manager/milter-manager-controller.[ch]: Use
	MilterManagerChildren. test_data() fails yet.

2008-10-23  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c: follow the below changes.

	* milter/manager/milter-manager.c: create controller for each session.

	* milter/manager/milter-manager-configuration.[ch]: add dummy
	create function.

	* milter/manager/milter-manager-controller.[ch]: accept client context.

2008-10-23  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.[ch]: Emit errors when
	child milter produces a core dump or exits.

2008-10-23  Kouhei Sutou  <kou@cozmixng.org>

	* module/configuration/ruby/milter-manager-ruby-configuration.c:
	set methods.

	* milter/manager/, test/manager/:
	milter_manager_configuration_new() accepts properties.

	* milter/manager/milter-manager-controller.[ch]: follow up the
	below changes.

	* milter/, module/, test/: ruby controller -> ruby configuration.

	* module/: controller -> configuration.

	* test/lib/milter-test-client.rb: fix timeout timing.

2008-10-22  Kouhei Sutou  <kou@cozmixng.org>

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: set timeout but problems still exist.

	* test/lib/milter-test-client.rb (MilterTestClient#invalid_state):
	fix argument.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle envelope-receipt.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle envelope-from.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle helo.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle connect.

	* test/manager/test-child-milter.c (test_start): output nothing.

	* test/manager/test-controller.c, test/lib/milter-test-client.rb,
	module/controller/ruby/milter-manager-ruby-controller.c,
	milter/manager/milter-manager.c: write test that uses
	milter-test-client.rb.

	* test/lib/milter-test-client.rb: add.

2008-10-22  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.c: Use
	milter_utils_set_error_with_sub_error().
	* milter/manager/milter-manager.c,
	milter/manager/milter-manager-controller.[ch],
	module/controller/ruby/milter-manager-ruby-controller.c: Handle
	"mta-timeout" signal from MilterClientContext.

2008-10-21  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager-child-milter.c: don't use
	g_set_error_literal().

	* test/: setup controller's test environment.

2008-10-21  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.[ch]: Added
	milter_manager_child_milter_start().
	* milter/manager/milter-manager-child-milter.c: Do not use
	G_SPAWN_DO_NOT_REAP_CHILD since MilterManagerChildMilter does not care
	about the child process future.
	* milter/manager/milter-manager-child-milter.c: Added command line
	options.
	* test/manager/test-configuration.c: gcut_assert_equal_child_milters
	-> milter_assert_equal_child_milters.
	* milter/manager/milter-manager-child-milter.c:
	milter_manager_child_milter_start() returns GError.
	* module/controller/ruby/milter-manager-ruby-controller.c: start child
	milter process if connection fails.
	* milter/manager/milter-manager-child-milter.c: Added user and
	group. Cleanup.
	* milter/manager/milter-manager-child-milter.[ch]: Set uid and gid.
	* milter/manager/milter-manager-child-milter.[ch]: Added
	MILTER_MANAGER_CHILD_MILTER_ERROR_NO_PREVILEGE_MODE.
	* milter/manager/milter-manager-child-milter.c: Check command value.
	* milter/manager/milter-manager-child-milter.c: Use properties.
	* milter/manager/milter-manager-configuration.[ch]: Added
	milter_manager_configuration_is_privilege_mode.
	* module/controller/ruby/milter-manager-ruby-contoroller.c: Use
	milter_manager_configuration_is_privilege_mode.
	* milter/manager/milter-manager-configuration.[ch]: Added
	milter_manager_configuration_get_return_status_if_filter_unavailable.
	* module/controller/ruby/milter-manager-ruby-contoroller.c: Use
	milter_manager_configuration_get_return_status_if_filter_unavailable.
	* milter/manager/milter-manager-configuration.[ch]: Added
	get_XX_timeout().
	* milter/manager/milter-manager.c (setup_context_signals): gpointer ->
	MilterManagerContoroller.

2008-10-20  Kouhei Sutou  <kou@cozmixng.org>

	* test/lib/milter-test-server.rb: make customizable.

	* test/lib/milter-test-server.rb: add a milter server implemented
	by Ruby for testing milter manager.

	* test/manager/: move to test here.

	* test/lib/: milter-test-utils -> milter-manager-test-utils.

2008-10-16  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* module/controller/ruby/milter-manager-ruby-controller.c:
	"negotiate-reply" signal accompanies with GList not GHashTable.

2008-10-15  Kouhei Sutou  <kou@cozmixng.org>

	* module/controller/ruby/milter-manager-ruby-controller.c:
	negotiate -> negotiate-reply.

	* ./: close -> quit.

2008-10-15  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager.c: Connect to "connection-established"
	instead of MilterClientContextSetupFunc.

2008-10-10  Kouhei Sutou  <kou@cozmixng.org>

	* module/controller/ruby/milter-manager-ruby-controller.c: add
	experimental server side handling. MilterServerContext should emit
	negotiate-response signal.

	* data/milter-manager.conf: use spec.

	* binding/ruby/lib/milter/manager.rb: support connection_spec.

	* milter/module/milter-manager-controller.[ch],
	module/controller/ruby/milter-manager-ruby-controller.c,
	binding/ruby/lib/milter/manager.rb,
	milter/manager/milter-manager.c:
	- search a configure file in load paths.
	- use status returned by controller.

	* configure.ac, Makefile.am, data/Makefile.am,
	data/milter-manager.conf: add sample configuration file.

	* binding/ruby/src/: bind some methods for
	MilterManagerConfiguration and MilterManagerChildMilter.

	* binding/ruby/lib/milter/manager.rb: support child milter define
	API.

	* milter/manager/milter-manager-child-milter.[ch]: accept name.

	* milter/manager/milter-manager.c: show log to stdout.

	* milter/manager/milter-manager-ruby-internal.h: support rb_errinfo().

	* module/controller/ruby/Makefile.am: support milter_logger().

	* module/controller/ruby/milter-manager-ruby-controller.c: guard
	error on Ruby.

	* milter/manager/milter-manager-context.[ch]: remove.
	* milter/manager/milter-manager.c: use MiliterManagerController
	directly.

	* milter/manage/milter-manager-controller.[ch],
	module/controller/ruby/milter-manager-ruby-controller.c: load()
	receives file name.

2008-10-09  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager.c: handle SIGINT.

	* module/controller/: create.

	* module/ruby/: move to ...
	* module/controller/ruby/: ... here.

	* configure.ac, module/ruby/milter-manager-ruby-controller.c,
	binding/ruby/: set Ruby related paths.

	* configure.ac, module/manager/milter-manager-controller.c: set
	module related path.

	* module/ruby/Makefile.am: remove needless variable.

	* module/ruby/Makefile.am: fix rpath.

	* milter/: add module based controller.
	* module/: implement Ruby based controller module.
	* binding/: build as extension library.
	* src/: split milter-manger program.

2008-10-08  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/, binding/: support configuration file load
	written by Ruby but there are many problems...

	* milter/manager/, test/: MilterManagerConfiguration collects
	MilterManagerChildMilter.

2008-10-07  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/: make MilterManagerConfiguration GObject.

	* configure.ac, milter/: support Ruby embedding.

	* ./: move milter/{core,client,server} and libmilter to
	milter-toolkit package.
