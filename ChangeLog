2008-11-20  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c: Handle "delete-header"
	signal.
	* test/lib/milter-test-client.rb: Added "--delete-header" option.

2008-11-20  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter/manager/milter-manager-configuration.[ch],
	test/manager/test-configuration.c: add
	milter_manager_configuration_save_custom().

	* milter/manager/milter/manager/milter-manager-configuration.[ch],
	module/configuration/ruby/milter-manager-ruby-configuration.c:
	load path is managed in parent configuration class.

	* binding/ruby/lib/milter/manager.rb,
	milter/manager/milter-manager.c, test/manager/test-leader.c:
	follow the above changes.

	* milter/manager/milter-manager-configuration.[ch],
	test/manager/test-configuration.c: add
	milter_manager_configuration_clear().

2008-11-19  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager-controller.c: follow the recent
	changes.

	* binding/ruby/src/rb-milter-manager-control-decoder.c,
	binding/ruby/src/rb-milter-manager-private.h,
	binding/ruby/src/rb-milter-manager.c,
	binding/ruby/test/test-control-command-decoder.rb,
	binding/ruby/test/test-control-reply-decoder.rb: add
	Milter::Manager::ControlCommandDecoder and
	Milter::Manager::ControlReplyDecoder.

	* binding/ruby/src/rb-milter-manager-control-reply-encoder.c,
	binding/ruby/src/rb-milter-manager-private.h,
	binding/ruby/src/rb-milter-manager.c,
	binding/ruby/test/test-control-reply-encoder.rb: add
	Milter::Manager::ControlReplyEncoder.

	* binding/ruby/src/rb-milter-manager-control-command-encoder.c,
	binding/ruby/src/rb-milter-manager-private.h,
	binding/ruby/src/rb-milter-manager.c,
	binding/ruby/test/test-control-command-encoder.rb,
	binding/ruby/test/milter-manager-encoder-test-utils.rb: add
	Milter::Manager::ControlCommandEncoder.

	* milter/manager/milter-manager-control-reply-{en,de}coder.[ch],
	test/manager/test-control-command-{en,de}coder.c: import -> set.

	* milter/manager/milter-manager-control-reply-encoder.[ch],
	test/manager/test-control-reply-encoder.c: support failure, error
	and configuration.

	* milter/manager/milter-manager-control-reply-encoder.[ch],
	test/manager/test-control-reply-encoder.c: add
	MilterManagerControlReplyEncoder.

	* test/manager/test-control-reply-decoder.c: add a test for
	unknown reply is received.

	* milter/manager/milter-manager-control-reply-decoder.[ch],
	test/manager/test-control-reply-decoder.c: support configuration.

	* milter/manager/milter-manager-control-reply-decoder.[ch],
	test/manager/test-control-reply-decoder.c: support failure and error.

	* milter/manager/milter-manager-control-reply-decoder.[ch],
	test/manager/test-control-reply-decoder.c: add
	MilterManagerControlReplyDecoder.

	* milter/manager/milter-manager-control-command-decoder.c,
	milter/manager/milter-manager-control-command-encoder.c,
	milter/manager/milter-manager-control-protocol.h:
	- MILTER_MANAGER_CONTROL_PROTOCOL_COMMAND_XXX ->
	  MILTER_MANAGER_CONTROL_COMMAND_XXX

	* milter/manager/, test/:
	control-{decoder,encoder} -> control-command-{decoder,encoder}.

	* milter/manager/milter-manager-control-encoder.[ch],
	test/manager/test-control-encoder.c: add.

	* milter/manager/milter-manager-control-decoder.h: cleanup includes.

	* test/manager/test-children.c: cleanup includes.

2008-11-19  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/tools/milter-manager-test-milter.c: Added.
	* milter/manager/milter-manager-headers.[ch]: Removed.
	* milter/manager/milter-manager-children.c,
	test/manager/test-leader.c, test/lib/milter-manager-test-server.[ch],
	test/lib/milter-manager-test-scenario.c: Use MilterHeaders instead
	of MilterManagerHeaders.

2008-11-18  Kouhei Sutou  <kou@cozmixng.org>

	* test/
	- mail -> envelope-from.
	- rcpt -> envelope-recipient.

	* milter/manager/milter-manager-children.c,
	test/manager/test-children.c, test/manager/test-leader.c:
	- MAIL -> ENVELOPE_FROM.
	- RCPT -> ENVELOPE_RECIPIENT.

	* test/lib/milter-test-client.rb: use Milter::ReplyEncoder not
	Milter::Encoder.

	* ./: handler -> agent.

2008-11-18  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c
	(get_first_command_waiting_child_queue): Emit "continue" signal if the
	first child in waiting queue does not need the command because if
	there is no response (i.e. continue or so), MTA does not send a next
	command.
	* test/lib/milter-test-client.rb: Added "--negotiate-flags" option.
	Return the option which has modified in milter-test-client.rb. Also
	the step of the return option is always the value which is set with
	"--negotiate-flags".
	* test/fixtures/leader/negotiate.txt: Set various steps of negotiate
	option.
	* milter/manager/milter-manager-children.c (state_to_command): Set
	server context state before emit "continue" signal.
	* test/manager/test-leader.c: Connect "xx-response" signal before
	sending each command. Also add "no_command_received" option in
	scenario file.
	* test/fixtures/leader/no-body-flag.txt: Added.
	* test/fixtures/leader/*.txt: Added "no_command_received" option if
	"n_recieved = 0" exists.
	* milter/manager/milter-manager-children.[ch]: Emit error even if all milters send
	MILTER_STEP_NO_XX flag and the command is sent.
	* milter/manager/milter-manager-children.c: Check the command can be
	sent before sending the command.
	* milter/manager/milter-manager-children.[ch]: Emit error if all
	milters are already dead.
	* test/fixtures/leader/*.txt: Check
	MILTER_MANAGER_CHILDREN_ERROR_NO_ALIVE_MILTER error.
	Hmm, "no_command_received" option is not used any more..
	* test/manager/test-leader.c (assert_response_common): Remove
	"no_command_received".
	(assert_have_response_helper): Remove should_timeout argument.
	* milter/manager/milter-manager-children.c (get_next_command): Skip
	command which is set to STEP_NO_XX on negotiation.

2008-11-17  Kouhei Sutou  <kou@cozmixng.org>

	* binding/ruby/lib/milter/manager.rb, data/milter-manager.conf:
	support control connection.

	* milter/manager/milter-manager.c: accept control
	connection. (only accept)

	* milter/manager/milter-manager-controller.[ch]: add.

	* milter/manager/milter-manager-configuration.[ch]: add control
	connection spec configuration.

	* test/manager/test-leader.c (do_connect),
	test/manager/test-children.c (do_connect),
	test/manager/test-egg.c (test_connection_spec_error),
	milter/manager/milter-manager-egg.c
	(milter_manager_egg_set_connection_spec): follow the recent
	milter-toolkit changes.

	* milter/manager.h,
	milter/manager/milter-manager-control-decoder.[ch],
	milter/manager/milter-manager-control-protocol.h,
	test/manager/test-control-decoder.c: add milter manager control
	protocol decoder.

	* test/manager/test-leader.c (do_end_of_message),
	test/fixtures/leader/: checked received chunks.

	* test/manager/test-leader.c (do_unknown),
	test/fixtures/leader/unknown.txt: check received unknown commands.

	* ./: controller -> leader.

	* test/manager/test-children.c (test_writing_timeout): wait
	continue signal.

2008-11-17  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c (cb_temporary-failure):
	Emit "temporay-failure" signal while processing END-OF-MESSAGE.
	* milter/manager/milter-manager-children.c (cb_skip): Send a next
	command if END-OF-MESSAGE has been already sent.
	* milter/manager/milter-manager-children.c (cb_skip): Cleanup. Move to
	the next of cb_accept().
	* milter/manager/milter-manager-children.c
	(test_end_of_message_timeout): Set end-of-message timeout zero only
	for the first client.
	* test/fixtures/controller/end-of-message-replaced-body: The second
	client does not reject on BODY and check replaced body chunks on
	END-OF-MESSAGE.
	* milter/manager/milter-manager-headers.[ch]: Added
	milter_manager_headers_length().
	* milter/manager/milter-manager-headers.[ch]: Added
	milter_manager_headers_get_nth_header().
	* milter/manager/milter-manager-headers.c
	(milter_manager_headers_get_nth_header): THe index begins from 1 not
	0.
	* test/lib/milter-manager-test-scenario.c
	(milter_manager_test_scenario_get_pair_list): Set name NULL.
	* test/manager/test-leader.c (do_header): Sort header list before
	assert check.
	* milter/manager/milter-manager-children.c: HEADER command is sent to
	a child sequential to END-OF-MESSAGE command.
	* milter/manager/milter-manager-children.c: DATA command is sent to
	a child sequential to END-OF-MESSAGE command.
	* milter/manager/milter-manager-headers.[ch]: Added
	milter_manager_headers_copy().
	* milter/manager/milter-manager-children.c: Preserve orignal header
	list. TODO: Emit appropiriate xx-header signals when all children
	completed the process.
	* milter/manager/milter-manager-headers.[ch]: Added
	milter_manager_headers_lookup_by_name().
	* milter/manager/milter-manager-headers.[ch]: Added
	milter_manager_headers_find().
	* milter/manager/milter-manager-headers.[ch]: Added
	milter_manager_headers_remove().
	* milter/manager/milter-manager-headers.c
	(milter_manager_headers_change_header): Added a new header if the
	index is greater then the number of headers which has the targert
	name.
	* milter/manager/milter-manager-headers.[ch]: Added
	milter_manager_headers_index_in_same_header_name().
	* milter/manager/milter/manager-children.c: Emit "add-header",
	"insert-header" and "change-header" before the last "end-of-message"
	signal.
	* test/manager/test-leaders.c: Unified "xx-header" signal tests.
	* test/lib/milater-manager-test-scenario.c: Use MilterManagerHeader
	instead of MilterManagerTestHeader.
	* test/lib/milter-manager-test-server.[ch]: Use MilterManagerHeader.
	* milter/manager/milter-manager-children.c
	(emit_signals_on_end_of_message): Remove found header from processing
	list if change-header is emitted.
	* test/lib/milter-manager-test-server.[ch]: Added
	milter_manager_test_server_add_header() to a header on "HEADER"
	command.
	* test/manager/test-leader.c (do_header): Invoke
	milter_manager_test_server_add_header() expicitly.
	* test/lib/milter-manager-test-utis.[ch]: Remove
	MilterManagerTestHeader.

2008-11-16  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-children.c (assert_response_common): wait
	until signal emitted.

	* test/manager/test-controller.c (assert_response_common): wait
	received end-of-message output.

2008-11-14  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-children.c: write a test for writing timeout.

	* test/manager/test-children.c,
	test/fixtures/children/header.txt: rewrite
	end-of-header test as scenario based test.

	* test/manager/test-children.c,
	test/fixtures/children/header.txt: rewrite
	header test as scenario based test.

	* test/manager/test-children.c,
	test/fixtures/children/data.txt: rewrite
	data test as scenario based test.

2008-11-14  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c: Send "BODY" imediately if
	the target child is the first one.
	* test/manager/test-controller.c (do_body): Check response and chunks.
	* test/fixtures/controller/end-of-message-discard.txt,
	test/fixtures/controller/end-of-message-reject.txt,
	test/fixtures/controller/end-of-message-temporary-failure.txt:
	n_received is 1 on end-of-message response because no more process for
	the message if a child returns "REJECT", "DISCARD" or
	"TEMPORARY-FAILURE".
	* test/fixtures/controller/body.txt,
	test/fixtures/controller/body-accept.txt: Check chunk on each body
	command.
	* test/fixtures/controller/body-skip.txt,
	test/fixtures/controller/body-skip-all.txt: Check chunks on each body.
	But I am not sure each client is received correct chunks. I would like
	to write chunks[first-skip-client]=First skip message or something.
	* milter/manager/milter-manager-children.c (cb_finished): Do not
	invoke remove_child_from_queue() if current state is BODY and
	END_OF_MESSAGE.
	* milter/manager/milter-manager-children.c: command_queue ->
	command_waiting_child_queue.
	* milter/manager/milter-manager-children.c: Commands that from
	END-OF-HEADER to END-OF-MESSAGE are sent to a child sequentially.

2008-11-13  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-children.c,
	test/fixtures/children/envelope-recipient.txt: rewrite
	envelope-recipient test as scenario based test.

	* test/manager/test-children.c,
	test/fixtures/children/envelope-from.txt: rewrite envelope-from
	test as scenario based test.

	* test/manager/test-children.c,
	test/fixtures/children/helo.txt: rewrite helo test as
	scenario based test.

	* test/manager/test-children.c,
	test/fixtures/children/connect.txt: rewrite connect test as
	scenario based test.

	* test/manager/test-children.c,
	test/fixtures/children/negotiate-retry-fail.txt: rewrite retry
	failure on negotiate test as scenario based test.

	* milter/manager/milter-manager-headers.c: remove needless function.

	* test/lib/milter-manager-test-scenario.[ch]: support egg creation.

	* test/lib/milter-manager-test-client.[ch]
	(milter_manager_test_client_get_command): add.

	* test/manager/test-children.c,
	test/fixtures/children/negotiate-retry.txt: rewrite retry on
	negotiate test as scenario based test.

2008-11-13  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c (send_body_to_child): NULL
	check of body_file. Also ref and unref for should_sent_body_milters.
	* milter/manager/milter/manager-children.c (send_body_to_child):
	Remove should_sent_body_milters before NULL check of body_file.
	* test/manager/test-children.c (test_end_of_message_timeout): wait
	until end-of-message-timeout signal is received.
	* test/lib/milter-test-client.rb: info_abort to get abort received
	status from MilterManagerTestClient.
	* test/fixtures/controller/abort.txt ->
	tetst/fixtures/controller/abort-on-end-of-message.txt: Renamed.
	* test/lib/milter-manager-test-scenario.c: Fix memory leak.
	* test/lib/milter-manager-test-client.[ch]: MilterManagerTestClient
	has its name. milter_manager_test_client_new() needs its name. Added
	milter_manager_test_client_find().
	* test/lib/milter-manager-test-client.[ch]: Added name getter.
	* test/lib/milter-manager-test-client.[ch]: Added
	milter_manager_test_client_wait_reply(). It just waits from a
	specified client.
	* test/lib/milter-manager-test-scenario.[ch]: Added
	milter_manager_test_scenario_get_locale_string().
	 The name should be change more appropriate name.
	* test/lib/milter-manager-test-scenario.[ch]: 
	milter_manager_test_scenario_get_locale_string() ->
	milter_manager_test_scenario_get_string_with_sub_key.
	Also add G_KEY_FILE_KEEP_TRANSLATIONS flag.
	* test/lib/milter-manager-test-client.c
	(milter_manager_test_client_wair_reply): reverse return value of
	getter.
	* test/manager/test-controller.c: Proof-of-concept of
	reponse[client10026] entry in scenario file. It is only enabled to be
	used in bort, need to be generalization.
	* milter/manager/milter-manager-headers.[ch]: Added.
	* milter/manager/milter-manager-children.c: Manage headers (not
	completed yet). 
	(cb_reject_code): Invoke cb_reject() at the end of the function.

2008-11-12  Kouhei Sutou  <kou@cozmixng.org>

	* test/lib/milter-manager-test-utils.[ch]
	(milter_manager_test_wait_signal): support timeout check.
	* test/manager/test-children.c, test/manager/test-controller.c:
	use milter_manager_test_wait_signal() with timeout check.

	* test/lib/milter-manager-test-server.[ch]
	(milter_manager_test_server_wait_signal): move to ...
	* test/lib/milter-manager-test-utils.[ch]
	(milter_manager_test_wait_signal): ... here.
	* test/manager/test-controller.c: use
	milter_manager_test_wait_signal() instead of
	milter_manager_test_server_wait_signal().

	* test/lib/milter-test-client.rb: support regular expression for
	chunk specification.

2008-11-12  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* fixtures/controller/body-accept.txt,
	fixtures/controller/body-skip.txt,
	fixtures/controller/body-skip-all.txt: "BODY" command now sends
	conjunct message at once. i.e. "First lineSecond line". So just send a
	"BODY" command for a while.
	* milter/manager/milter-manager-children.c: Now "BODY" chunks is sent
	on "END-OF-MESSAGE" command.  But "ERROR! - invalid state" message
	output here and threre.
	* test/manager/test-controller.c: Do not check response in body action
	since "BODY" command does not send chunks to milter until
	"END-OF-MESSAGE" command is sent. Also not clear test client data on
	body command.
	* milter/manager/milter-manager-children.[ch]: Added
	milter_manager_children_get_state().
	* milter/manager/milter-manager-children.c: Set current state to
	MILTER_MANAGER_CHILDREN_STATE_BODY before send body.
	* milter/manager/milter-manager-children.c (cb_continue): Do nothing
	if body state. Fix invalid state error.
	* milter/manager/milter-manager-children.[ch]: Now
	MilterManagerChildren has its state represented by
	MilterServerContextState. Also manage body and end-of-message queue
	with should_be_sent_body_milters list. But invalid state error
	reappears in "body accept" test.
	* milter/manager/milter-manager-children.c (remove_child_from_queue):
	Do not emit signal while BODY state.
	* milter/manager/milter-manager-children.c (cb_finished): Output
	state to log.
	* test/fixtures/controller/quit.txt: n_received of quit-response is 1
	since the first child has been quited in end-of-message state so
	quit-response is received only from the second child in
	milter-manager.
	* milter/manager/milter-manager-children.c: Replace body chunk if
	"REPLACE-BODY" reply is received and send the replaced body to the
	child. Changed test name, "replace separate" -> "replace overwrite".
	* milter/manager/milter-manager-children.c: Cleanup skip process.
	* test/manager/test-controller.c: Also check chunks in end-of-message.
	* test/fixtures/controller/body-skip-*.txt: check body response and
	chunks.
	* milter/manager/milter-manager-children.c: Preserve the chunk of
	END-OF-MESSAGE aside from body chunks.

2008-11-12  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-children.c,
	test/fixtures/children/negotiate.txt: add a initial but dirty
	scenario support.

	* test/fixtures/controller/negotiate.txt: remove a garbage.

2008-11-11  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager-children.c: fix reference count bug.

	* test/lib/milter-test-client.rb (MilterTestClient#read_packet):
	ignore EOF error.

	* test/manager/test-controller.c: 50 -> 100.

	* test/manager/test-controller.c: move scenario related codes to ...
	* test/lib/milter-manager-test-scenario.[ch],
	test/lib/milter-manager-test-client.[ch]: ... here.

2008-11-11  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* test/lib/milter-manager-test-client.c: Support multi-line response
	from milter-test-client.rb.
	* milter/manager/milter-manager-child.[ch]: Remove name property.
	* milter/manager/milter-manager-children.h: Added
	MilterManagerChildrenState.
	* milter/manager/milter-manager-children.[ch]: Preserve reply status
	for each MilterServerContextState.
	* milter/manager/milter-manager-controller.c: multipule body support.
	* milter/manager/milter-manager-controller.c: Do not set
	END_OF_MESSAGE state if the current state BODY.

2008-11-10  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-children.c: fix a memory leak.

	* test/manager/test-children.c,
	test/lib/milter-test-client.rb: fix timeout test. but not good yet...

	* test/lib/milter-manager-test-client.c: cleanup.

	* test/lib/milter-manager-test-client.[ch],
	test/manager/test-controller.c,
	test/fixtures/controller/negotiate.txt: checks all received
	negotiate option.

	* test/lib/milter-manager-test-client.[ch],
	test/lib/milter-test-client.rb, test/manager/test-controller.c:
	add received negotiate option check.

	* test/manager/test-controller.c,
	test/lib/milter-manager-test-client.[ch],
	test/fixtures/controller/connect.txt: add received connect info check.

2008-11-10  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* test/lib/milter-test-client.rb: Set @next_state :abort
	instead of :quit if no_response option is set since if :quit
	state is set, TCPServer loop exits before
	"end_of_message_timeout" signal is emitted.
	* milter/manager/milter-manager-egg.[ch]: Add timeout values should be
	 gdboule.
	* milter/manager/milter-manager-children.c (expire_all_children): copy
	priv->milters before expiring.
	* milter/manager/milter-manager-children.[ch]: Added
	milter_manager_children_set_retry_connect_time.

2008-11-10  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c,
	test/fixtures/controller/helo.txt: check all received FQDNs on helo.

	* test/manager/test-controller.c: remove needless variables.

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-from-accept-all.txt:
	rewrite a test for accept from all clients on envelope-from as
	scenario based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-from-accept.txt:
	rewrite a test for accept on envelope-from as scenario
	based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-from-reject-and-accept.txt:
	rewrite a test for reject and accept on envelope-from as scenario
	based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-from-reject-and-discard.txt:
	rewrite a test for reject and discard on envelope-from as scenario
	based test.

2008-11-09  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-from-discard.txt: rewrite a test
	for discard on envelope-from as scenario based test.

	* milter/manager/milter-manager-children.c,
	test/fixtures/controller/envelope-recipient-*.txt: discard is
	important status rather than reject even if it is received on
	envelope-recipient.

	* test/lib/milter-test-client.rb: add --insert-header,
	--change-header and --remove-header.

	* test/manager/test-controller.c: remove needless code.

2008-11-07  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c, test/fixtures/controller/*.txt:
	rewrite tests as scenario based test.

	* milter/manager/milter-manager-children.c: expires all children
	if children's reply status is reject.

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-recipient-accept*.txt:
	rewrite envelope-recipient received accept test as scenario based
	test.

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-recipient-reject.txt:
	rewrite envelope-recipient received reject test as scenario based
	test.

	* test/lib/milter-test-client.rb: more convenient.

	* test/manager/test-controller.c,
	test/fixtures/controller/envelope-recipient-temporary-failure-all.txt:
	rewrite envelope-recipient received temporary-failure from all
	clients test as scenario based test.

	* test/manager/test-controller.c: remove needless test.

	* test/lib/milter-manager-test-client.[ch]: add pair values
	collect function.

	* test/lib/milter-manager-test-utils.[ch]: cleanup.

	* test/manager/test-controller.c: remove needless test.

	* test/lib/milter-manager-test-client.[ch]: add string values
	collect function.
	* test/manager/test-controller.c, test/fixtures/controller/: use
	the above function.

	* test/manager/test-controller.c,
	test/fixtures/controller/body-accept.txt: rewrite
	body accept test as scenario based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/body-skip-all.txt: rewrite
	body skipped by all clients test as scenario based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/end-of-message-chunk.txt: rewrite
	end-of-message test as scenario based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/progress.txt: rewrite
	progress test as scenario based test.

	* test/lib/milter-manager-test-server.[ch]: get_XXXed_YYYs ->
	get_received_XXX_YYYs.
	* test/manager/test-controller.c, test/fixtures/controller/:
	follow the above change.

2008-11-07  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c: Send "NEGOTIATE" after "ready"
	signal from a child is received.
	test_retry_negotiate_failure() and test_reading_timeout() fail yet.
	* milter/manager/milter-manager-children.c: Cleanup negotiation code.
	All tests passes now. Handle "connection-timeout" of
	MilterServerContext.
	* milter/manager/milter-manager-children.c: Remove unused value
	(quarantine_readon).

2008-11-06  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c,
	test/fixtures/controller/replay-code-invalid.txt: rewrite
	invalid reply-code test as scenario based test.

	* test/lib/milter-manager-test-server.[ch]: reply_code -> replied_codes.

	* test/manager/test-controller.c,
	test/fixtures/controller/replay-code.txt: rewrite
	reply-code test as scenario based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/replace-body-separate.txt: rewrite
	replace-body from two clients test as scenario based test.

	* test/lib/milter-manager-test-server.[ch]: replace -> replaced.

	* test/manager/test-controller.c,
	test/fixtures/controller/replace-body.txt: rewrite
	replace-body test as scenario based test.

	* test/lib/milter-manager-test-server.[ch]: delete -> deleted.

	* test/manager/test-controller.c,
	test/fixtures/controller/delete-recipient.txt: rewrite
	delete-recipient test as scenario based test.

	* test/lib/milter-test-client.rb, test/manager/test-children.c:
	add no-response action and use it.

	* test/lib/milter-manager-test-utils.[ch]: ValueWithParam -> Pair.

	* test/lib/milter-manager-test-server.[ch]: collect all values.

	* test/manager/test-controller.c,
	test/fixtures/controller/add-recipient.txt: rewrite add-recipient test
	as scenario based test.

	* test/manager/test-controller.c,
	test/fixtures/controller/change-from.txt: rewrite change-from test
	as scenario based test.

	* test/lib/milter-manager-test-server.[ch]: collect change-from
	data as hash table.

	* test/manager/test-controller.c,
	test/fixtures/controller/quarantine.txt: add a test for quarantine.

	* test/manager/test-controller.c: remove needless add-header test.

	* test/manager/test-controller.c,
	test/fixtures/controller/add-header.txt: add add-header test.

	* test/manager/test-child.c: ensure restoring the current locale.

	* test/lib/milter-test-client.rb: cleanup --reply-code.

	* test/lib/milter-test-client.rb: support more flexible actions in
	end-of-message.

	* test/lib/milter-test-client.rb: not Array!

2008-11-06  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* test/lib/milter-manager-test-utils.[ch]: added
	milter_manager_test_header_compare.
	* test/lib/milter-test-client.rb: Send progress on end-of-message
	anyway.
	* test/lib/milter-manager-test-server.[ch]: Replace body should be a
	GList.
	* test/lib/milter-test-client.rb: "reply-code" option.
	* milter/manager/milter-manager-children.c,
	milter/manager/milter-manager-controller.c: Return
	MILTER_STATUS_REJECT if "reply-code" is received.
	* test/lib/milter-test-client.rb: Do not override action if reply-code
	option is not set.
	* milter/manager/milter-manager-controller.c(cb_shutdown,
	cb_connection_failure): SHUTDOWN and CONNECTION_FAILURE are not sent
	from milter but Sendmail may use them so output message to log.
	* milter/manager/milter-manager-child.[ch]: Remove
	milter_manager_child_new_with_timeout.
	* milter/manager/milter-manager-children.c (cb_finished): Output
	message to log. 
	* test/manager/test-children.c: Added reading timeout test. The test
	sometimes fails maybe.

2008-11-05  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c, test/fixtures/controller/: use
	scenario based test for tests of quit, abort and unknown.

	* test/manager/test-controller.c, test/fixtures/controller/: split
	scenario.

	* test/lib/milter-manager-test-client.[ch]: support clearing data.

	* test/manager/test-controller.c,
	test/fixtures/controller/body-skip.txt,
	test/fixtures/controller/connect.txt: support nested import.

	* test/manager/test-controller.c,
	test/fixtures/controller/body-skip.txt,
	test/fixtures/controller/negotiate.txt: implement import.

	* test/manager/test-controller.c,
	test/fixtures/controller/body-skip.txt: add status test.

	* test/lib/milter-manager-test-client.[ch],
	test/lib/milter-test-client.rb: collect FQDN, envelope from and
	envelope recipient data.

	* test/manager/test-controller.c,
	test/fixtures/controller/body-skip.txt: add scenario based test.

	* test/lib/Makefile.am: set CUT_RELATIVE_PATH.

	* test/manager/test-controller.c, test/fixtures/controller/: use
	GKeyFile to create MilterOption.

	* test/lib/milter-test-client.rb: override.

	* test/lib/milter-test-client.rb: cleanup.

2008-11-05  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* test/lib/milter-manager-test-server.c: Use g_idle_add_full with
	G_PRIORITY_DEFAULT to wait for receiving signals.
	* test/manager/test-controller.c (test_body): Create its own test data
	structure.
	* test/manager/test-controller.c: Added add-header test. TODO: check
	header names and values.
	* test/lib/milter-manager-test-utils.[ch]: Added
	MilterManagerTestHeader struct.
	* test/lib/milter-manager-test-server.[ch]: Added
	milter_manager_test_server_get_headers.
	* test/lib/milter-manager-test-utils.[ch]: Added
	milter_manager_test_header_inspect.
	* test/lib/milter-manager-test-utils.[ch]: Added
	milter_manager_test_header_equal.
	* test/manager/test-controller.c: Check header name and value.
	* test/manager/test-controller.c: Send different header from
	test-client respectively.
	* test/lib/milter-manager-test-server.c: Preserve recipient and from.
	* test/manager/test-controller.c: Use
	milter_server_context_set_state() instead of
	milter_server_context_end_of_message().
	* test/lib/milter-manager-test-server.c: Accessors.
	* test/lib/milter-test-client.rb: "--envelope-from" option.
	* test/lib/milter-test-client.rb: "--change-from" option.
	* test/lib/milter-test-client.rb: "--delete-recipient" option.
	* test/lib/milter-manager-test-utils.[ch]: MilterManagerTestHeader has
	an index.
	* test/lib/milter-manager-test-utils.[ch]: Added
	MilterManagerTestValueWithParam.
	* test/lib/milter-test-client.rb: "--add-recipient" option.
	* milter/manager/milter-manager-children.c
	(child_negotiate_without_retry): Emit "negotiate-reply" if previous
	negotiation is established.

2008-11-04  Kouhei Sutou  <kou@cozmixng.org>

	* test/lib/milter-test-client.rb, test/manager/test-controller.c:
	support --add-header.

	* test/lib/milter-test-client.rb: add more info.

	* test/manager/test-controller.c (test_end_of_message_quarantine):
	use GCutStringIOChannel's pipe mode.

2008-11-04  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-controller.c (cb_reply_code): Handle
	error from milter_client_context_set_reply().
	* test/manager/test-controller.c: Added a test for accepting in body.
	* test/lib/milter-manager-test-sever.[ch]: Added a new object for MTA
	substitute. The test fails yet.
	* test/manager/test-controller.c: Work around for GCutStringIOChannel.
	* test/lib/milter-manager-test-server.[ch]: Added get_n_XXs accesors.
	* test/manager/test-controller.c: Set MilterOption to
	MilterManagerTestServer explicitly.

2008-11-03  Kouhei Sutou  <kou@cozmixng.org>

	* binding/ruby/lib/milter/manager.rb: fix inverted bug.

2008-11-02  Kouhei Sutou  <kou@cozmixng.org>

	* data/milter-manager.conf: comment out optional configuration.

	* binding/ruby/lib/milter/manager.rb: improve error report.

	* data/milter-manager.conf, binding/ruby/lib/milter/manager.rb:
	support milter filter.

	* binding/ruby/lib/milter/manager.rb, data/milter-manager.conf:
	improve configuration file format.

	* milter/manager/milter-manager-children.c: fix passed data.

	* milter/manager/milter-manager-children.c: fix object lifetime.

	* milter/manager/milter-manager-child.c: use WEXITSTATUS().

	* milter/manager/milter-manager-child.c: support G_SPAWN_SEARCH_PATH.

	* test/: use configuration file in test/fixtures/configuration/.

	* milter/manager/milter-manager-controller.c: fix children write
	result handling.

	* milter/manager/milter-manager.c (milter_manager_main): change
	default port number: 9999 -> 10025.

2008-10-31  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c: cleanup.

	* milter/manager/milter-manager-children.c,
	test/manager/test-children.c: remove needless quarantine.

	* test/lib/milter-test-client.rb,
	milter/manager/milter-manager-children.c,
	test/manager/test-controller.c: support quarantine.

	* test/lib/milter-test-client.rb: upcase!

	* ./: receipt -> recipient.

	* test/lib/milter-test-client.rb: fix typos.

2008-10-31  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* test/manager/test-controller.c (test_envelope_receipt_reject): Check
	REJECT status.
	* test/manager/test-controller.c (test_envelope_receipt_reject): Also
	check going on accept further command.
	* test/lib/milter-test-clienr.rb: In ENVELOPE_RECEIPT, REJECT status
	is just rejecting the current receipt address.
	* test/manager/test-controller.c: Added a test for discarding in
	ENVELOPE_RECEIPT.
	* test/manager/test-controller.c: Added a test for temporary failure in
	ENVELOPE_RECEIPT.
	* test/manager/test-controller.c: Added a test for accepting in
	ENVELOPE_RECEIPT.
	* test/manager/test-controller.c
	(test_envelope_receipt_temporary_failure): Also check going on accept
	further command.
	* test/manager/test-controller.c: Added a test for returning "ACCEPT"
	and "TEMPORARY FAILURE" and "DISCARD".
	* milter/manager/milter-manager-children.[ch]: Important status
	depends on the current MilterServerContextState.
	* test/manager/test-controller.c: Added a test for returning "ACCEPT"
	and "DISCARD" from each child respectively.
	* test/manager/test-controller.c: Added a test that both children
	returns "TEMPORARY FAILURE".
	* test/manager/test-controller.c: Added a test that both children
	returns "ACCEPT".
	* milter/manager/milter-manager-children.c: Do not send "QUIT" command
	to the child which returns "SKIP" status. "SKIP" status means just
	skip further BODY command, it should be received next other
	command(i.e. END_OF_MESSAGE by ordinary). The test fails yet.
	* test/lib/milter-test-server.rb: Added info_XX methods.
	* milter/manager/milter-manager-children.c,
	milter/manager/milter-manager-controller.c: Handle reply-code.

2008-10-30  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c: add a test for rejected from
	child. it's not completed. FIXME!!!

	* test/lib/milter-manager-test-client.[ch]
	(milter_manager_test_client_set_arguments): add.

	* test/lib/milter-test-client.rb: support action.

	* milter/manager/milter-manager-children.c,
	test/manager/test-children.c: add tests for
	milter_manager_children_is_important_status(). need more.

	* milter/manager/milter-manager-children.[ch]
	(milter_manager_children_is_important_status): export.

	* test/manager/test-children.c (test_connect_pass): add.

	* test/manager/test-children.c (test_connect): add.

	* test/manager/test-children.c (test_negotiate): cleanup.

	* test/manager/test-children.c: use MilterManagerTestClient.

	* test/lib/milter-manager-test-client.[ch]
	(milter_manager_test_clients_wait_reply)
	(milter_manager_test_clients_collect_n_received): add.

	* test/manager/test-controller.c: use the above functions.

	* test/lib/Makefile.am: make libmilter-manager-test.la shared library.

2008-10-30  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* test/manager/test-controller.c: Revert the last commit.
	* milter/manager/milter-manager-children.c (cb_finished): Emit reply
	status if the child is the last one.
	* milter/manager/milter-manager-children.c (cb_finished): Emit reply
	status only if the reply status is not MILTER_STATUS_NOT_CHANGE(i.e.
	reply status has been changed in MilterManagerChildren.)
	* test/manager/test-controller.c: Remove needless
	g_main_context_itration and wait "unknown-response".
	* milter/manager/milter-manager-children.c: Retry negotiation to a
	milter when restart a milter. TODO: the test is not implemented yet.
	* milter/manager/milter-manager-egg.[ch]: Added command_options
	property.
	* milter/manager/milter-manager-configuration.c: privilege mode is a
	property.
	* milter/manager/milter-manager-children.c (child_negotiate):
	Reinitialize error value with NULL before invoking
	milter_manager_child_start().
	* milter/manager/milter-manager-child.c: stdout and stderr of a milter
	to /dev/null.
	* test/manager/test-children.c (test_retry_negotiate): To kill
	milter-test-client.rb sends "QUIT" command because the process which
	was run	from MilterManagerChild cannot kill.
	* milter/manager/milter-manager-controller.c: Send QUIT command to
	milters if "mta-timeout" signal is received.
	* module/configuration/ruby/milter-manager-ruby-configuration.c: Use
	G_DEFINE_DYNAMIC_TYPE.
	* milter/manager/milter-manager-controller.c: g_signal_emit_by_name()
	does not need detail GQuark.
	* milter/manager/milter-manager-children.c: Fix typo.
	* test/manager/test-children.c: added test_connect_half_pass().
	* milter/manager/milter-manager-children.c
	(milter_manager_children_is_important_status): Return TRUE or FALSE.

2008-10-29  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c: use MilterManagerTestClient.
	* test/lib/milter-manager-test-client.[ch]: add missing features.

	* test/lib/milter-manager-test-client.[ch]: add.

	* test/manager/test-children.c: add a test for negotiate. TOO DUTY!!!

	* binding/ruby/test/: follow the recent changes.

	* test/manager/test-controller.c: improve reply waiting.

	* test/manager/test-controller.c: cleanup.

	* milter/manager/milter-manager-children.c,
	test/manager/test-children.c: append a child not prepend.

	* milter/manager/milter-manager-egg.[ch], test/manager/test-egg.c:
	add hatched signal.

	* milter/manager/milter-manager-child.h: MANAGER_TYPE -> TYPE_MANAGER.

2008-10-29  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c: Initialize quitted_milters
	with NULL and the first element should be itself not priv->milters.
	* data/milter-manager.conf, test/manager/test-controller.c: A new baby
	was born.
	* test/manager/test-egg.c: Unset MILTER_LOG_LEVEL.
	* milter/manager/milter-manager-children.c: Remove from reply queue if
	timeout is occurred.
	* milter/manager/milter-manager-children.c (cb_skip, cb_quarantine):
	Remove reply queue if state check fails.
	* test/manager/test-controller.c (test_quit, test_abort,
	test_unknown): Invoke g_main_context_iteration until all pending
	events were processed.
	* milter/manager/milter-manager-children.c: If all children sends
	"SKIP", emit "skip" signal.
	* milter/manager/milter-manager-children.c (cb_reject, cb_discard):
	Send "QUIT" command to a filter.
	* milter/manager/milter-manager-children.c:
	MILTER_STATUS_TEMPORARY_FAILURE should be very weak because if a
	filter sends TEMPORARY FAILURE, drop the filter only. All the other
	filters should not be affected.
	* milter/manager/milter-manager-children.c:
	MILTER_STATUS_TEMPORARY_FAILURE is not a critical status.
	* milter/manager/milter-manager-children.c: Added
	compare_reply_status.
	* milter/manager/milter-manager-children.c: Handle QUARANTINE reply.
	* milter/manager/milter-manager-children.c (cb_reject, cb_discard):
	Remove the second call of quit_child().
	* milter/manager/milter-manager-children.c (cb_skip, cb_quarantine):
	Send "QUIT" command if state check fails.
	* milter/manager/milter-manager-children.c: Expire the child if error
	is received.
	* milter/manager/milter-manager-children.c (cb_skip, cb_quarantine):
	Emit reply signal even if state check fails.
	* test/manager/test-controller.c: Check the number of received reply.
	Initialize client_end_of_header_received with 0.
	* milter/manager/milter-manager-children.c: Receive "finished" signal
	from each child and remove it from reply queue.
	* emitable -> emittable.
	* milter_error_emittable_emit_error -> milter_error_emittable_emit.
	* milter/manager/milter-manager-childrenc.: Emit "finished" signal if
	all children have gone away!
	* milter/manager/milter-manager-controller.c: Emit "finished" signal
	when receiving "finished" signal from MilterManagerChildren.
	* milter/manager/milter-manager-children.c: Expire a child only if
	"finished" signal is received or time out error.
	* test/manager/test-controller.c (test_unknown): Also check "finished"
	signal is received.
	* test/manager/test-controller.c: Send quit command after abort
	command.

2008-10-28  Kouhei Sutou  <kou@cozmixng.org>

	* binding/ruby/, data/milter-manager.conf: use egg.

	* milter/manager/milter-manager-configuration.[ch]: use egg not child.

	* milter/manager/milter-egg.[ch], test/manager/test-egg.c: support
	connection spec and hatch.

	* milter/manager/milter-manager-children.[ch]:
	- add milter_manager_children_length().
	- don't unref child while signal callback. decoder owned by
	the unrefed child may be processing.

	* milter/manager/milter-manager-child.[ch]: add child's name accessors.

	* test/manager/test-controller.c: spawn -> egg.

	* ./: spawn -> egg.

	* binding/ruby/test/test_spawn.rb: add tests for accessors.

2008-10-28  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-configuration.[ch]: Remove timeout
	values since these values depend on filter.
	* milter/manager/milter-manager-children.c: Emit compiled reply signal
	when all filters have returned response.
	* milter/manager/milter-manager-children.c: Also added child to queue in
	body command.
	* milter/manager/milter-manager-children.c: If the status from a
	filter is "ACCEPT" or "REJECT" or "DISCARD", send "QUIT" command and
	remove the filter from children list.
	* milter/manager/milter-manager-children.c (cb_temporary_failure):
	expire the filter if the state is a connection-oriented routine (i.e.
	NEGOTIATE or CONNECT or HELO).
	* milter/manager/milter-manager-children.c (cb_reject): expire the
	filter except ENVELOPE_RECEIPT routine. In the case of
	ENVELOPE_RECEIPT, reject the receipt and continue the session.
	* milter/manager/milter-manager-children.c: milter_error if SKIP reply
	is received not in BODY. send BODY command if skip reply has not been
	received yet.
	* milter/manager/milter-manager-children.c: NEGOTIATE is not a
	connection-oriented routine, QUIT is the one of it.
	* milter/manager/milter-manager-children.c: Emit "skip" signal if all
	children are received "SKIP" reply.
	* milter/manager/milter-manager-children.c (compile_reply_status):
	MILTER_STATUS_CONTINUE < MILTER_STATUS_ACCEPT <
	MILTER_STATUS_TEMPORARY_FAILURE < MILTER_STATUS_DISCARD <
	MILTER_STATUS_REJECT.
	* milter/manager/milter-manager-children.c: "progress" and
	"quarantine" reply are only allowed in end of message session.
	* milter/manager/milter-manager-children.c: Unref MilterChild in
	teardown_server_context_signals.
	* milter/manager/milter-manager-children.c: Close connection to a
	filter if timeout is happend.
	* milter/manager/milter-manager-controller.c: Cleanup unused timeout
	codes.
	* test/manager/test-child.c: Set MILTER_LOG_LEVEL environment value to
	suppress milter's log output.

2008-10-27  Kouhei Sutou  <kou@cozmixng.org>

	* binding/ruby/test/: add.

	* binding/ruby/src/rb-milter-manager.c,
	binding/ruby/src/rb-milter-manager-spawn.c,
	binding/ruby/src/rb-milter-manager-private.h,
	binding/ruby/src/Makefile.am: add spawn.

	* milter/manager.h: add spawn.

	* milter/manager/milter-manager-spawn.[ch],
	test/manager/test-spawn.c: add command.

	* milter/manager/milter-manager-spawn.[ch],
	test/manager/test-spawn.c: add user name.

	* milter/manager/milter-manager-child.c (child_watch_func): cleanup.

	* test/manager/test-controller.c: remove debug code.

	* test/manager/test-spawn.c: add tests for timeout.

	* milter/manager/milter-manager-spawn.[ch],
	test/manager/test-spawn.c: add.

	* milter/manager/milter-manager-controller.c,
	test/lib/milter-test-client.rb,
	test/manager/test-controller.c: support unknown command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support abort command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support quit command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support end-of-message command.

	* milter/manager/milter-manager-children.c: end-of-message isn't
	affected by MILTER_STEP_NO_BODY.

	* test/lib/milter-test-client.rb: end-of-message signal may
	receive chunk.

	* test/manager/test-controller.c: handle all step.

	* test/lib/milter-test-server.rb
	(MilterTestServer#sender_address): return Milter::SocketAddress
	not packed string.

	* milter/manager/milter-manager-children.c
	(milter_manager_children_end_of_message): shorten.

2008-10-27  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-children.c: Merge each MilterOption
	from filter.
	* milter/manager/milter-manager-children.c: MilterManagerConfigration
	property.
	* milter/manager/milter-manager-controller.c: Remove
	MilterMacrosRequests from private values.
	* milter/manager/milter-manager-children.c: Emit "error" signal.
	* milter/manager/milter-manager-children.c: Emit "error" if the daemon
	of child filter could not be started.
	* milter/manager/milter-manager-children.c: Check each command is
	needed for a child filter before invoking the command.
	* milter/manager/milter-manager-children.c: Emit "negotiate-reply"
	signal when all children filters returns "negotiate-reply".
	* milter/manager/milter-manager-controller.c: Connect to "error" signal
	of MilterManagerChildren.
	* milter/manager/milter-manager-childrenc.c: Emit "negotiate-reply"
	with its own (i.e. merged or combined )MilterOption and
	MilterMacrosRequests. And milter_manager_children_negotiate() returns
	FALSE if a filter fails on negotiation.
	* milter/manager.h: Include milter-manager-children.h.
	* milter/manager/milter-manager-objects.h: Added.
	* milter/manager/milter-manager-configuration.h: Move typedef of
	MilterManagerConfiguration into milter-manager-objects.h.
	* milter/manager/milter-manager-children.[ch]:
	milter_manager_children_new() now needs a MilterManagerConfiguration
	object.
	* milter/manager/milter-manager-controller.c: Include
	milter-manager-children.h.
	* test/manager/test-controller.c: Support for prural children.
	* milter/manager/milter-manager-configuration.[ch]: sending timeout ->
	writing timeout.
	* milter/manager/milter-manager-child.[ch]: Added
	milter_manager_child_new_with_timeout().
	* milter/manager/milter-manager-children.c,
	milter/manager/milter-manager-controller.c: sending timeout -> writing
	timeout.
	* test/manager/test-controller.c: Set client_ready and client_reaped
	TRUE in the head of run_spawn().
	* milter/manager/milter-manager-children.c: Emit each reply signals
	till after all child's signals are received.
	* milter/manager/milter-manager-childre.c:  Emit "error" signal with
	correct object.

2008-10-24  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support body command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support end-of-header command.

	* ./: support coverage.

	* milter/manager/milter-manager-controller.c,
	test/lib/milter-test-client.rb, test/manager/test-controller.c:
	support header command.

	* milter/manager/milter-manager-controller.c,
	test/manager/test-controller.c: support data command.

	* milter/manager/Makefile.am: add missing milter-manager-controller.h.

	* milter/manager/milter-manager-controller.c: child -> children.

	* milter/, bindings/src/, module/configuration/ruby/:
	MILTER_MANAGER_TYPE_XXX -> MILTER_TYPE_MANAGER_XXX.

	* binding/ruby/lib/milter/manager.rb,
	binding/ruby/src/rb-milter-manager-configuration.c,
	binding/ruby/src/rb-milter-manager-child.c,
	binding/ruby/src/rb-milter-manager-private.h,
	binding/ruby/src/rb-milter-manager.c: child milter -> child.

	* TODO: add: MilterManagerMother

2008-10-24  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.c: Use g_spawn_close_pid.
	* test/manager/test-child-milter.c: Exit error test.
	* milter/manager/milter-manager-controller.c: negotiate_reply signal
	has a MilterMacrosRequests.
	* milter/manager/milter-manager-controller.c: Merge
	MilterMacrosRequest in negotiate-reply signal.
	* milter/manager/milter-manager-controller.c: NULL check barrier for
	MilterMacrosRequests.
	* milter/manager/*: MilterManagerChildMilter -> MilterManagerChild.
	* milter/manager/milter-manager-children.[ch]: Added.
	* milter/manager/milter-manager-children.c: MilterManagerChildren now
	uses MilterReplySignals.
	* milter/manager/milter-manager-children.[ch]: Added server_context
	methods.
	* milter/manager/milter-manager-children.c: Emit each reply signals
	depends on conditions. TODO: bunch each child signals.
	* milter/manager/milter-manager-configuration.[ch],
	milter/manager/milter-manager-controller.[ch]: Use
	MilterManagerChildren. test_data() fails yet.

2008-10-23  Kouhei Sutou  <kou@cozmixng.org>

	* test/manager/test-controller.c: follow the below changes.

	* milter/manager/milter-manager.c: create controller for each session.

	* milter/manager/milter-manager-configuration.[ch]: add dummy
	create function.

	* milter/manager/milter-manager-controller.[ch]: accept client context.

2008-10-23  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.[ch]: Emit errors when
	child milter produces a core dump or exits.

2008-10-23  Kouhei Sutou  <kou@cozmixng.org>

	* module/configuration/ruby/milter-manager-ruby-configuration.c:
	set methods.

	* milter/manager/, test/manager/:
	milter_manager_configuration_new() accepts properties.

	* milter/manager/milter-manager-controller.[ch]: follow up the
	below changes.

	* milter/, module/, test/: ruby controller -> ruby configuration.

	* module/: controller -> configuration.

	* test/lib/milter-test-client.rb: fix timeout timing.

2008-10-22  Kouhei Sutou  <kou@cozmixng.org>

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: set timeout but problems still exist.

	* test/lib/milter-test-client.rb (MilterTestClient#invalid_state):
	fix argument.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle envelope-receipt.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle envelope-from.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle helo.

	* module/controller/ruby/milter-manager-ruby-controller.c,
	test/manager/test-controller.c: handle connect.

	* test/manager/test-child-milter.c (test_start): output nothing.

	* test/manager/test-controller.c, test/lib/milter-test-client.rb,
	module/controller/ruby/milter-manager-ruby-controller.c,
	milter/manager/milter-manager.c: write test that uses
	milter-test-client.rb.

	* test/lib/milter-test-client.rb: add.

2008-10-22  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.c: Use
	milter_utils_set_error_with_sub_error().
	* milter/manager/milter-manager.c,
	milter/manager/milter-manager-controller.[ch],
	module/controller/ruby/milter-manager-ruby-controller.c: Handle
	"mta-timeout" signal from MilterClientContext.

2008-10-21  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager-child-milter.c: don't use
	g_set_error_literal().

	* test/: setup controller's test environment.

2008-10-21  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager-child-milter.[ch]: Added
	milter_manager_child_milter_start().
	* milter/manager/milter-manager-child-milter.c: Do not use
	G_SPAWN_DO_NOT_REAP_CHILD since MilterManagerChildMilter does not care
	about the child process future.
	* milter/manager/milter-manager-child-milter.c: Added command line
	options.
	* test/manager/test-configuration.c: gcut_assert_equal_child_milters
	-> milter_assert_equal_child_milters.
	* milter/manager/milter-manager-child-milter.c:
	milter_manager_child_milter_start() returns GError.
	* module/controller/ruby/milter-manager-ruby-controller.c: start child
	milter process if connection fails.
	* milter/manager/milter-manager-child-milter.c: Added user and
	group. Cleanup.
	* milter/manager/milter-manager-child-milter.[ch]: Set uid and gid.
	* milter/manager/milter-manager-child-milter.[ch]: Added
	MILTER_MANAGER_CHILD_MILTER_ERROR_NO_PREVILEGE_MODE.
	* milter/manager/milter-manager-child-milter.c: Check command value.
	* milter/manager/milter-manager-child-milter.c: Use properties.
	* milter/manager/milter-manager-configuration.[ch]: Added
	milter_manager_configuration_is_privilege_mode.
	* module/controller/ruby/milter-manager-ruby-contoroller.c: Use
	milter_manager_configuration_is_privilege_mode.
	* milter/manager/milter-manager-configuration.[ch]: Added
	milter_manager_configuration_get_return_status_if_filter_unavailable.
	* module/controller/ruby/milter-manager-ruby-contoroller.c: Use
	milter_manager_configuration_get_return_status_if_filter_unavailable.
	* milter/manager/milter-manager-configuration.[ch]: Added
	get_XX_timeout().
	* milter/manager/milter-manager.c (setup_context_signals): gpointer ->
	MilterManagerContoroller.

2008-10-20  Kouhei Sutou  <kou@cozmixng.org>

	* test/lib/milter-test-server.rb: make customizable.

	* test/lib/milter-test-server.rb: add a milter server implemented
	by Ruby for testing milter manager.

	* test/manager/: move to test here.

	* test/lib/: milter-test-utils -> milter-manager-test-utils.

2008-10-16  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* module/controller/ruby/milter-manager-ruby-controller.c:
	"negotiate-reply" signal accompanies with GList not GHashTable.

2008-10-15  Kouhei Sutou  <kou@cozmixng.org>

	* module/controller/ruby/milter-manager-ruby-controller.c:
	negotiate -> negotiate-reply.

	* ./: close -> quit.

2008-10-15  Hiroyuki Ikezoe  <poincare@ikezoe.net>

	* milter/manager/milter-manager.c: Connect to "connection-established"
	instead of MilterClientContextSetupFunc.

2008-10-10  Kouhei Sutou  <kou@cozmixng.org>

	* module/controller/ruby/milter-manager-ruby-controller.c: add
	experimental server side handling. MilterServerContext should emit
	negotiate-response signal.

	* data/milter-manager.conf: use spec.

	* binding/ruby/lib/milter/manager.rb: support connection_spec.

	* milter/module/milter-manager-controller.[ch],
	module/controller/ruby/milter-manager-ruby-controller.c,
	binding/ruby/lib/milter/manager.rb,
	milter/manager/milter-manager.c:
	- search a configure file in load paths.
	- use status returned by controller.

	* configure.ac, Makefile.am, data/Makefile.am,
	data/milter-manager.conf: add sample configuration file.

	* binding/ruby/src/: bind some methods for
	MilterManagerConfiguration and MilterManagerChildMilter.

	* binding/ruby/lib/milter/manager.rb: support child milter define
	API.

	* milter/manager/milter-manager-child-milter.[ch]: accept name.

	* milter/manager/milter-manager.c: show log to stdout.

	* milter/manager/milter-manager-ruby-internal.h: support rb_errinfo().

	* module/controller/ruby/Makefile.am: support milter_logger().

	* module/controller/ruby/milter-manager-ruby-controller.c: guard
	error on Ruby.

	* milter/manager/milter-manager-context.[ch]: remove.
	* milter/manager/milter-manager.c: use MiliterManagerController
	directly.

	* milter/manage/milter-manager-controller.[ch],
	module/controller/ruby/milter-manager-ruby-controller.c: load()
	receives file name.

2008-10-09  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/milter-manager.c: handle SIGINT.

	* module/controller/: create.

	* module/ruby/: move to ...
	* module/controller/ruby/: ... here.

	* configure.ac, module/ruby/milter-manager-ruby-controller.c,
	binding/ruby/: set Ruby related paths.

	* configure.ac, module/manager/milter-manager-controller.c: set
	module related path.

	* module/ruby/Makefile.am: remove needless variable.

	* module/ruby/Makefile.am: fix rpath.

	* milter/: add module based controller.
	* module/: implement Ruby based controller module.
	* binding/: build as extension library.
	* src/: split milter-manger program.

2008-10-08  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/, binding/: support configuration file load
	written by Ruby but there are many problems...

	* milter/manager/, test/: MilterManagerConfiguration collects
	MilterManagerChildMilter.

2008-10-07  Kouhei Sutou  <kou@cozmixng.org>

	* milter/manager/: make MilterManagerConfiguration GObject.

	* configure.ac, milter/: support Ruby embedding.

	* ./: move milter/{core,client,server} and libmilter to
	milter-toolkit package.
