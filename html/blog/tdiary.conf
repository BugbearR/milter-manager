# -*- mode: ruby; coding: utf-8 -*-

require 'etc'
entry = Etc.getpwuid(Process.uid)
ENV["HOME"] = entry.dir

ENV["PATH"] = "/tmp/local/bin:#{ENV['HOME']}/local/bin:#{ENV['PATH']}"

tdiary_conf = "tdiary.conf"
if File.symlink?(tdiary_conf)
  tdiary_conf = File.readlink(tdiary_conf)
end
base = File.expand_path(File.dirname(tdiary_conf)) + "/"
base.untaint

tdiary_base = File.expand_path("~/work/ruby/tdiary") + "/"
default_conf = File.read("#{tdiary_base}core/tdiary.conf.sample")
eval(default_conf.gsub(/^load_cgi_conf.*$/, ''))

@data_path = File.expand_path('~/data/milter-manager/blog/ja').untaint

@author_name = "milter managerプロジェクト"
@author_mail = nil

@style = 'RD'
@theme = 'milter-manager'

@html_title = "milter managerで迷惑メール対策"

@description = "milter managerの開発や迷惑メール対策に関するログ"

@index_page = ""

@header = <<HEADER
<div class="header">
  <h1>
    <a href="../../index.html.ja">
      <span class="title">milterを使った効果的な迷惑メール対策</span>
      <span class="title-separator">-</span>
      <span class="title-project">milter manager</span>
    </a>
  </h1>
  <ul class="other-languages">
    <li id="other-language-english"><a href="../../">English</a></li>
  </ul>
  <ul class="menu">
    <li id="menu-introduction"><a href="../../reference/ja/introduction.html">はじめに</a></li>
    <li id="menu-install"><a href="../../reference/ja/install.html">インストール</a></li>
    <li id="menu-reverse-dictionary"><a href="../../reference/ja/reverse-dictionary.html">逆引きリファレンス</a></li>
    <li id="menu-download"><a href="http://downloads.sourceforge.net/milter-manager/milter-manager-1.8.2.tar.gz">ダウンロード</a></li>
    <li id="menu-blog"><a href="./">ブログ</a></li>
  </ul>
</div>

<div class="content">
  <%= navi %>
  <%= calendar %>
  <div class="category-list">
    <span class="category-list-label">タグ:</span> <%= classed_category_list %>
  </div>
HEADER

@footer = <<-FOOTER
  <%= navi %>
  <%= calendar %>
</div>

<div class="sponsors">
  <p id="sponsor-ipa">
    <a href="http://www.clear-code.com/">株式会社クリアコード</a>は<a href="http://www.ipa.go.jp/software/open/ossc/2008/theme/koubo1.html">独立行政法人情報処理推進機構（IPA）平成20年度オープンソフトウェア利用促進事業</a>「迷惑メール対策を柔軟に実現するためのmilterの開発」の一環としてmilter managerの開発を行ないました。
  </p>
  <p id="sponsor-sf-net">
    <a href="http://sourceforge.net/projects/milter-manager">
      <img src="http://sflogo.sourceforge.net/sflogo.php?group_id=236233&amp;type=12" width="120" height="30" border="0" alt="SourceForge.netからmilter managerをダウンロード。高速で安全なフリーオープンソースソフトウェアダウンロード。" />
    </a>
  </p>
  <p id="sponsor-github">
    <a href="http://github.com/milter-manager/">
      <img src="../../github-logo.png" width="100" height="45" border="0" alt="GitHubの提供するgitリポジトリを利用しています。" />
    </a>
  </p>
  <p id="sponsor-tango">
    <a href="http://tango.freedesktop.org/">
      <img width="120" height="53" border="0" alt="Tango Desktop Projectのアイコンを利用しています。" src="../../tango-logo.png" />
    </a>
  </p>
  <p id="sponsor-famfamfam">
    <a href="http://www.famfamfam.com/">
      <img width="120" height="18" border="0" alt="famfamfam.comの国旗を利用しています。" src="../../famfamfam-logo.png" />
    </a>
  </p>
</div>
FOOTER
# "

@show_comment = false
@hide_comment_form = true

require "#{base}clear-code/gitio"
@io_class = TDiary::GitIO

require "#{base}clear-code/patches/customizable-style-path"
@options['style.path'] = ["#{tdiary_base}core/misc/style/rd"]

# require "#{base}clear-code/patches/rd-highlight-source"


@options['sp.path'] = [
                       "#{tdiary_base}core/misc/plugin",
                       "#{tdiary_base}contrib/plugin",
                       "#{base}clear-code/plugin",
                      ]
@options['sp.selected'] = [
                           "date-to-tag.rb",
                           "title-navi-label.rb",
                           "link-subtitle.rb",
                           "a.rb",
                           "bq.rb",
                           "category.rb",
                           "classed-category-list.rb",
                           "footnote.rb",
                           "image.rb",
                           "navi_user.rb",
                           "hatena_star.rb",
                           "highlight.rb",
                           "makerss.rb",
                           "multi-icon.rb",
                           "my-sequel.rb",
                           "section_footer2.rb",
                           "title_tag.rb",

                           "zz-permalink-without-section-id.rb",
                          ].join("\n")

@options['section_footer2.isDisplay'] = [
                                         "hatena",
                                         "facebook",
                                         "twitter",
                                        ].join("\n")

if @cgi.respond_to?(:html_archiver?)
  @base_url = "http://milter-manager.sourceforge.net/blog/ja/"
  @footer << <<-FOOTER
<!-- Piwik -->
<script type="text/javascript">
var pkBaseURL = (("https:" == document.location.protocol) ? "https://apps.sourceforge.net/piwik/milter-manager/" : "http://apps.sourceforge.net/piwik/milter-manager/");
document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
piwik_action_name = '';
piwik_idsite = 1;
piwik_url = pkBaseURL + "piwik.php";
piwik_log(piwik_action_name, piwik_idsite, piwik_url);
</script>
<object><noscript><p><img src="http://apps.sourceforge.net/piwik/milter-manager/piwik.php?idsite=1" alt="piwik"/></p></noscript></object>
<!-- End Piwik Tag -->
FOOTER
end

@options["html_archiver.category.normalize_table"] = {
  "ウィルス" => "virus",
  "スパム" => "spam",
}

@options['multi-icon.paths'] = ["/favicon.ico", "/favicon.png"]

require 'fileutils'
cache_path = File.join(@data_path, "cache")
yaml_path = File.join(cache_path, "yaml")
FileUtils.mkdir_p(yaml_path) unless File.exist?(yaml_path)
section_footer_yaml_path = "#{tdiary_base}contrib/misc/section_footer2"
Dir.glob("#{section_footer_yaml_path}/*.yaml") do |path|
  base_name = File.basename(path)
  yaml_file = File.join(yaml_path, base_name)
  case File.basename(path)
  when /retweet/
    FileUtils.rm_f(yaml_file) if File.exist?(yaml_file)
  else
    FileUtils.ln_sf(path, yaml_path)
  end
end

load_cgi_conf
